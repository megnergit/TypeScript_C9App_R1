{"ast":null,"code":"var _jsxFileName = \"/Users/meg/git9/scr/react-c9/src/components/Results.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// Results.js\nconst Results = props => {\n  console.log(\"props of Results\", props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date : \", props.countryData.date.slice(0, 10)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"New Infections : \", props.countryData.newConfirmed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Infections to date : \", props.countryData.totalConfirmed, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"New Recoveries : \", props.countryData.newRecovered]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Recoveries to date : \", props.countryData.totalRecovered]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/meg/git9/scr/react-c9/src/components/Results.js"],"names":["Results","props","console","log","countryData","date","slice","newConfirmed","totalConfirmed","newRecovered","totalRecovered"],"mappings":";;;AAAA;AACA,MAAMA,OAAO,GAAIC,KAAD,IAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC;AAEA,sBACI;AAAA,4BACI;AAAA,4BAAWA,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,EAAhC,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sCAAqBL,KAAK,CAACG,WAAN,CAAkBG,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gDAA+BN,KAAK,CAACG,WAAN,CAAkBI,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,sCAAqBP,KAAK,CAACG,WAAN,CAAkBK,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,gDAA+BR,KAAK,CAACG,WAAN,CAAkBM,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAZD;;KAAMV,O;AAaN,eAAeA,OAAf","sourcesContent":["// Results.js\nconst Results = (props) => {\n    console.log(\"props of Results\", props)\n\n    return (\n        <div>\n            <p>Date : {props.countryData.date.slice(0, 10)}</p>\n            <p>New Infections : {props.countryData.newConfirmed}</p>\n            <p>Total Infections to date : {props.countryData.totalConfirmed} </p>\n            <p>New Recoveries : {props.countryData.newRecovered}</p>\n            <p>Total Recoveries to date : {props.countryData.totalRecovered}</p>\n        </div>\n    );\n};\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}